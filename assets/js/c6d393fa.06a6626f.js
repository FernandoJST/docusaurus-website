"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[436],{4674:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/inspector-performance-timeline-775dfcdf9a830ced12d3b07416240df6.png"},5530:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"paneles/panel-rendimiento","title":"Panel Rendimiento: Optimizando la Velocidad de Ejecuci\xf3n","description":"El panel Rendimiento (Performance) es una herramienta avanzada para analizar cu\xe1nto tiempo tarda tu p\xe1gina en hacer cosas despu\xe9s de que los recursos han sido cargados (aunque tambi\xe9n captura la carga inicial). Te ayuda a identificar y corregir problemas de rendimiento en el tiempo de ejecuci\xf3n, como JavaScript lento, rec\xe1lculos de estilo costosos o repintados excesivos.","source":"@site/docs/paneles/08-panel-rendimiento.md","sourceDirName":"paneles","slug":"/paneles/panel-rendimiento","permalink":"/docusaurus-website/docs/paneles/panel-rendimiento","draft":false,"unlisted":false,"editUrl":"https://github.com/FernandoJST/docusaurus-website/tree/main/docs/paneles/08-panel-rendimiento.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Panel Red: Monitoreando el Tr\xe1fico de la Web","permalink":"/docusaurus-website/docs/paneles/panel-red"},"next":{"title":"Panel Memoria: Diagn\xf3stico de Uso de Memoria y Fugas","permalink":"/docusaurus-website/docs/paneles/panel-memoria"}}');var r=a(4848),s=a(8453);const l={},o="Panel Rendimiento: Optimizando la Velocidad de Ejecuci\xf3n",d={},t=[{value:"Grabando un Perfil de Rendimiento",id:"grabando-un-perfil-de-rendimiento",level:3},{value:"Analizando el Reporte de Rendimiento",id:"analizando-el-reporte-de-rendimiento",level:3},{value:"Identificando Cuellos de Botella",id:"identificando-cuellos-de-botella",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"panel-rendimiento-optimizando-la-velocidad-de-ejecuci\xf3n",children:"Panel Rendimiento: Optimizando la Velocidad de Ejecuci\xf3n"})}),"\n",(0,r.jsxs)(n.p,{children:["El panel ",(0,r.jsx)(n.strong,{children:"Rendimiento"})," (Performance) es una herramienta avanzada para analizar ",(0,r.jsx)(n.strong,{children:"cu\xe1nto tiempo tarda tu p\xe1gina en hacer cosas"})," despu\xe9s de que los recursos han sido cargados (aunque tambi\xe9n captura la carga inicial). Te ayuda a identificar y corregir problemas de rendimiento en el tiempo de ejecuci\xf3n, como JavaScript lento, rec\xe1lculos de estilo costosos o repintados excesivos."]}),"\n",(0,r.jsx)(n.h3,{id:"grabando-un-perfil-de-rendimiento",children:"Grabando un Perfil de Rendimiento"}),"\n",(0,r.jsx)(n.p,{children:"Para usar el panel Rendimiento, debes grabar la actividad del navegador durante un per\xedodo de tiempo:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Abre el panel Rendimiento."}),"\n",(0,r.jsxs)(n.li,{children:["Hay dos formas principales de grabar:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Haz clic en el c\xedrculo ",(0,r.jsx)(n.strong,{children:'"Record"'})," (Grabar) y luego interact\xfaa con la p\xe1gina (scroll, clics, animaciones) durante unos segundos. Vuelve al panel y haz clic en ",(0,r.jsx)(n.strong,{children:'"Stop"'})," (Detener)."]}),"\n",(0,r.jsxs)(n.li,{children:["Haz clic en el \xedcono de recarga con una flecha circular ",(0,r.jsx)(n.strong,{children:'"Start profiling and reload page"'})," (Iniciar perfilado y recargar p\xe1gina). El Inspector recargar\xe1 la p\xe1gina y grabar\xe1 la actividad durante la carga inicial hasta que determines detenerlo o se complete autom\xe1ticamente. Esta es la mejor opci\xf3n para analizar el rendimiento de carga percibido."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Opciones de grabaci\xf3n en el panel Rendimiento",src:a(7060).A+"",width:"582",height:"335"})}),"\n",(0,r.jsx)(n.p,{children:"Una vez que detienes la grabaci\xf3n, el Inspector procesar\xe1 los datos y mostrar\xe1 un reporte detallado."}),"\n",(0,r.jsx)(n.h3,{id:"analizando-el-reporte-de-rendimiento",children:"Analizando el Reporte de Rendimiento"}),"\n",(0,r.jsx)(n.p,{children:"El reporte de rendimiento es una l\xednea de tiempo visual compleja:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Overview (Gr\xe1ficos):"})," La secci\xf3n superior muestra gr\xe1ficos resumen a lo largo del tiempo para FPS (Frames Per Second), CPU usage, NET (actividad de red), y marcadores importantes como FCP (First Contentful Paint) y LCP (Largest Contentful Paint).","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Busca barras rojas en el gr\xe1fico de FPS; indican ca\xeddas de frames y una experiencia de usuario no fluida."}),"\n",(0,r.jsx)(n.li,{children:"Busca barras largas en el gr\xe1fico de CPU que indican que el hilo principal est\xe1 ocupado."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timeline Detallada:"})," Debajo del overview, hay carriles (lanes) para diferentes tipos de actividad:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NET:"})," Muestra la cascada de solicitudes de red durante el per\xedodo de grabaci\xf3n."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"FPS:"})," Muestra la tasa de frames."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main:"})," Es el carril m\xe1s importante. Muestra la actividad del hilo principal del navegador, que es responsable de ejecutar JavaScript, calcular estilos, hacer layout, pintar y componer. Aqu\xed ver\xe1s bloques de diferentes colores que representan diferentes tareas (Scripting - amarillo, Rendering - morado, Painting - verde, Loading - azul, Other - gris)."]}),"\n",(0,r.jsx)(n.li,{children:"Otros carriles pueden incluir Raster, Composite Layers, GPU, etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Timeline detallada en el panel Rendimiento",src:a(4674).A+"",width:"768",height:"565"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zoom y Selecci\xf3n:"})," Puedes hacer zoom en partes espec\xedficas de la l\xednea de tiempo arrastrando un \xe1rea en el overview, o usando la rueda del rat\xf3n mientras mantienes presionada ",(0,r.jsx)(n.code,{children:"Shift"}),". Esto te permite enfocarte en un pico de actividad."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paneles de An\xe1lisis Inferiores:"})," La secci\xf3n inferior cambia dependiendo de lo que selecciones en la l\xednea de tiempo y el tipo de vista que elijas:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Summary:"})," Muestra un resumen de la actividad en el rango de tiempo seleccionado."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bottom-Up:"}),' Lista las actividades ordenadas por el tiempo total que consumieron (el "tiempo propio" de una funci\xf3n m\xe1s el tiempo de las funciones que llama). \xdatil para ver qu\xe9 funciones son las m\xe1s "caras".']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Call Tree:"})," Muestra el tiempo de ejecuci\xf3n en una estructura de \xe1rbol de llamadas. \xdatil para entender el flujo de ejecuci\xf3n y d\xf3nde se acumula el tiempo."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Log:"})," Lista todos los eventos registrados en orden cronol\xf3gico."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flame Chart (en el carril Main):"})," Una visualizaci\xf3n jer\xe1rquica de las llamadas a funciones JavaScript a lo largo del tiempo. Las barras m\xe1s anchas indican funciones que tardaron m\xe1s en ejecutarse. La pila de llamadas se muestra verticalmente. \xa1Es una vista muy poderosa para identificar cuellos de botella en JavaScript!"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Flame Chart en el panel Rendimiento",src:a(5958).A+"",width:"810",height:"375"})}),"\n",(0,r.jsx)(n.h3,{id:"identificando-cuellos-de-botella",children:"Identificando Cuellos de Botella"}),"\n",(0,r.jsx)(n.p,{children:"Al analizar el reporte, busca:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tareas largas en el hilo principal:"})," Bloques amarillos (Scripting) o morados (Rendering) que duran m\xe1s de ~50ms. Estos pueden hacer que la p\xe1gina no responda."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Picos de actividad de CPU:"})," Indican que se est\xe1 realizando mucho procesamiento."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ca\xeddas de FPS:"})," Si las animaciones o el scroll no son fluidos."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Eventos de Recalculate Style o Layout:"})," Si ocurren con frecuencia o tardan mucho, es posible que tu CSS o manipulaciones del DOM sean ineficientes."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Usa los paneles Bottom-Up o Call Tree, junto con el Flame Chart, para desglosar las tareas largas y encontrar las funciones exactas que est\xe1n consumiendo m\xe1s tiempo."}),"\n",(0,r.jsx)(n.p,{children:"El panel Rendimiento es una herramienta avanzada pero incre\xedblemente valiosa para garantizar que tus aplicaciones web no solo funcionen correctamente, sino que tambi\xe9n ofrezcan una experiencia de usuario fluida y receptiva, especialmente en dispositivos menos potentes."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5958:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/inspector-performance-flame-chart-0c222c570f237f7250a63f2b56e317b7.png"},7060:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/inspector-performance-record-25231f103b08f064726ef3d04f905baa.png"},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>o});var i=a(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);